- block:
    - name: Install https transport for apt
      apt:
        name: apt-transport-https

    - name: Ensure echo-hello is not installed
      apt:
        name: echo-hello
        state: absent
        purge: yes

    # Note that this .deb is just a stupidly tiny one that has a dependency
    # on vim-tiny. Really any .deb will work here so long as it has
    # dependencies that exist in a repo and get brought in.
    # The source and files for building this .deb can be found here:
    # https://ci-files.testing.ansible.com/test/integration/targets/apt/echo-hello-source.tar.gz
    - name: Install deb file with dependencies from URL (check_mode)
      apt:
        deb: https://ci-files.testing.ansible.com/test/integration/targets/apt/echo-hello_1.0_all.deb
      check_mode: true
      register: apt_url_deps_check_mode

    - name: check to make sure we didn't install the package due to check_mode
      shell: dpkg-query -l echo-hello
      failed_when: false
      register: dpkg_result_check_mode

    - name: verify check_mode installation of echo-hello
      assert:
        that:
        - apt_url_deps_check_mode is changed
        - dpkg_result_check_mode.rc != 0

    - name: Install deb file with dependencies from URL (for real this time)
      apt:
        deb: https://ci-files.testing.ansible.com/test/integration/targets/apt/echo-hello_1.0_all.deb
      register: apt_url_deps

    - name: check to make sure we installed the package
      shell: dpkg-query -l echo-hello
      failed_when: False
      register: dpkg_result

    - name: verify real installation of echo-hello
      assert:
        that:
        - apt_url_deps is changed
        - dpkg_result is successful
        - dpkg_result.rc == 0

    - name: Install package from local repo
      apt:
        deb: "{{ repodir }}/dists/stable/main/binary-all/baz_1.0.0_all.deb"
        install_recommends: yes
      register: apt_url_deps

    - name: check to make sure we installed the package
      shell: dpkg -l | grep baz
      failed_when: False
      register: baz_dpkg_result

    - name: check to make sure we installed the package's recommends
      shell: dpkg -l | grep rolldice
      failed_when: False
      register: rolldice_dpkg_result

    - name: verify real installation of baz
      assert:
        that:
        - apt_url_deps is changed
        - baz_dpkg_result is successful
        - baz_dpkg_result.rc == 0
        - rolldice_dpkg_result is successful
        - rolldice_dpkg_result.rc == 0

    - name: Install package from local repo for install_suggests
      apt:
        deb: "{{ repodir }}/dists/stable/main/binary-all/taz_1.0.0_all.deb"
        install_suggests: yes
      register: install_suggests_test

    - name: check to make sure we installed the package
      shell: dpkg -l | grep taz
      failed_when: False
      register: taz_dpkg_result

    - name: check to make sure we installed the package's recommends
      shell: dpkg -l | grep ed
      failed_when: False
      register: ed_dpkg_result

    - name: verify real installation of taz
      assert:
        that:
        - install_suggests_test is changed
        - taz_dpkg_result is successful
        - taz_dpkg_result.rc == 0
        - ed_dpkg_result is successful
        - ed_dpkg_result.rc == 0

  always:
    - name: uninstall packages with apt
      apt:
        pkg:
          - echo-hello
          - rolldice
          - baz
          - taz
          - ed
        state: absent
        purge: yes
